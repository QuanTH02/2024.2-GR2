[
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "using System;",
    "adv": "using System;",
    "gold_out": "public class Calculator {",
    "pred_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "adv_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "imp_words": {
      "using": 324.45654296875
    }
  },
  {
    "success": 2,
    "pred_bleu": 20.25,
    "after_attack_bleu": 20.25,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "public int add(int a, int b) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 32.37,
    "after_attack_bleu": 32.37,
    "change": 0,
    "num_word": 4,
    "query": 0,
    "changes": [],
    "input": "public class Calculator {",
    "adv": "public class Calculator {",
    "gold_out": "return a + b;",
    "pred_out": "{ } }",
    "adv_out": "{ } }",
    "imp_words": {
      "Calculator": 111.2520980834961,
      "class": 93.68233489990234,
      "public": 76.80369567871094
    }
  },
  {
    "success": 2,
    "pred_bleu": 84.09,
    "after_attack_bleu": 84.09,
    "change": 0,
    "num_word": 7,
    "query": 0,
    "changes": [],
    "input": "public int Add(int a, int b) {",
    "adv": "public int Add(int a, int b) {",
    "gold_out": "}",
    "pred_out": "public",
    "adv_out": "public",
    "imp_words": {
      "int": 61.95795822143555,
      "a,": 74.77914428710938,
      "b)": 71.33380889892578,
      "Add(int": 66.26422882080078,
      "public": 45.62413787841797
    }
  },
  {
    "success": 3,
    "pred_bleu": 0.0,
    "after_attack_bleu": 0.0,
    "change": 0,
    "num_word": 4,
    "query": 0,
    "changes": [],
    "input": "return a + b;",
    "adv": "return a + b;",
    "gold_out": "",
    "pred_out": "c a se\"+b:b} f unction",
    "adv_out": "c a se\"+b:b} f unction",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 20.25,
    "after_attack_bleu": 20.25,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "public int subtract(int a, int b) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "return a - b;",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 84.09,
    "after_attack_bleu": 84.09,
    "change": 0,
    "num_word": 7,
    "query": 0,
    "changes": [],
    "input": "public int Subtract(int a, int b) {",
    "adv": "public int Subtract(int a, int b) {",
    "gold_out": "}",
    "pred_out": "public",
    "adv_out": "public",
    "imp_words": {
      "b)": 93.36068725585938,
      "int": 46.728424072265625,
      "Subtract(int": 72.23831176757812,
      "a,": 58.55010223388672,
      "public": 44.2369270324707
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 4,
    "query": 0,
    "changes": [],
    "input": "return a - b;",
    "adv": "return a - b;",
    "gold_out": "}",
    "pred_out": "case\"s\": r e t u",
    "adv_out": "case\"s\": r e t u",
    "imp_words": {
      "-": 142.632568359375,
      "return": 133.76666259765625,
      "a": 128.22494506835938
    }
  },
  {
    "success": 2,
    "pred_bleu": 38.61,
    "after_attack_bleu": 38.61,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "public class StringUtils {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 24.74,
    "after_attack_bleu": 24.74,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "public static String reverse(String str) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 18.8,
    "after_attack_bleu": 18.8,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "using System;",
    "adv": "using System;",
    "gold_out": "if (str == null) return null;",
    "pred_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "adv_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "imp_words": {
      "using": 324.45654296875
    }
  },
  {
    "success": 2,
    "pred_bleu": 18.58,
    "after_attack_bleu": 18.58,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "using System.Text;",
    "adv": "using System.Text;",
    "gold_out": "return new StringBuilder(str).reverse().toString();",
    "pred_out": "c ass S t ring{ }",
    "adv_out": "c ass S t ring{ }",
    "imp_words": {
      "using": 84.11221313476562
    }
  },
  {
    "success": 2,
    "pred_bleu": 27.3,
    "after_attack_bleu": 27.3,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "}",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 3,
    "pred_bleu": 0.0,
    "after_attack_bleu": 0.0,
    "change": 0,
    "num_word": 4,
    "query": 0,
    "changes": [],
    "input": "public class StringUtils {",
    "adv": "public class StringUtils {",
    "gold_out": "",
    "pred_out": "{ } }",
    "adv_out": "{ } }",
    "imp_words": {}
  },
  {
    "success": 3,
    "pred_bleu": 0.57,
    "after_attack_bleu": 0.57,
    "change": 0,
    "num_word": 6,
    "query": 0,
    "changes": [],
    "input": "public static string Reverse(string str) {",
    "adv": "public static string Reverse(string str) {",
    "gold_out": "public static boolean isEmpty(String str) {",
    "pred_out": "r",
    "adv_out": "r",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 19.72,
    "after_attack_bleu": 19.72,
    "change": 0,
    "num_word": 6,
    "query": 0,
    "changes": [],
    "input": "if (str == null) return null;",
    "adv": "if (str == null) return null;",
    "gold_out": "return str == null || str.length() == 0;",
    "pred_out": "if ( str == null)",
    "adv_out": "if ( str == null)",
    "imp_words": {
      "return": 135.63612365722656,
      "(str": 115.34909057617188,
      "null)": 113.11908721923828,
      "if": 103.39500427246094,
      "==": 101.8302230834961
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 4,
    "query": 0,
    "changes": [],
    "input": "char[] charArray = str.ToCharArray();",
    "adv": "char[] charArray = str.ToCharArray();",
    "gold_out": "}",
    "pred_out": "charArray = []; f or(",
    "adv_out": "charArray = []; f or(",
    "imp_words": {
      "=": 130.4225616455078,
      "charArray": 116.90701293945312,
      "char[]": 108.77887725830078
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "Array.Reverse(charArray);",
    "adv": "Array.Reverse(charArray);",
    "gold_out": "}",
    "pred_out": "r e v e rse(charArray)",
    "adv_out": "r e v e rse(charArray)",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 3,
    "query": 0,
    "changes": [],
    "input": "return new string(charArray);",
    "adv": "return new string(charArray);",
    "gold_out": "public class ArrayHelper {",
    "pred_out": "charArray.lengt h } f unction",
    "adv_out": "charArray.lengt h } f unction",
    "imp_words": {
      "new": 188.1111602783203,
      "return": 137.72645568847656
    }
  },
  {
    "success": 2,
    "pred_bleu": 24.74,
    "after_attack_bleu": 24.74,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "public static int[] sort(int[] arr) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 18.8,
    "after_attack_bleu": 18.8,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "if (arr == null) return null;",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 6,
    "query": 0,
    "changes": [],
    "input": "public static bool IsEmpty(string str) {",
    "adv": "public static bool IsEmpty(string str) {",
    "gold_out": "Arrays.sort(arr);",
    "pred_out": "public static bool IsEmpty(string str)",
    "adv_out": "public static bool IsEmpty(string str)",
    "imp_words": {
      "str)": 178.43414306640625,
      "IsEmpty(string": 164.60195922851562,
      "bool": 148.4086151123047,
      "public": 146.60784912109375,
      "static": 144.85311889648438
    }
  },
  {
    "success": 2,
    "pred_bleu": 27.3,
    "after_attack_bleu": 27.3,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "return string.IsNullOrEmpty(str);",
    "adv": "return string.IsNullOrEmpty(str);",
    "gold_out": "return arr;",
    "pred_out": "unction( s tr) { return",
    "adv_out": "unction( s tr) { return",
    "imp_words": {
      "return": 76.05236053466797
    }
  },
  {
    "success": 2,
    "pred_bleu": 27.3,
    "after_attack_bleu": 27.3,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "}",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 3,
    "pred_bleu": 0.0,
    "after_attack_bleu": 0.0,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 18.8,
    "after_attack_bleu": 18.8,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "using System;",
    "adv": "using System;",
    "gold_out": "public static int findMax(int[] arr) {",
    "pred_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "adv_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "imp_words": {
      "using": 324.45654296875
    }
  },
  {
    "success": 2,
    "pred_bleu": 6.74,
    "after_attack_bleu": 6.74,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "using System.Linq;",
    "adv": "using System.Linq;",
    "gold_out": "if (arr == null || arr.length == 0) return -1;",
    "pred_out": "using System.Collections; using System.Linq;",
    "adv_out": "using System.Collections; using System.Linq;",
    "imp_words": {
      "using": 208.95001220703125
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "return Arrays.stream(arr).max().getAsInt();",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 27.3,
    "after_attack_bleu": 27.3,
    "change": 0,
    "num_word": 4,
    "query": 0,
    "changes": [],
    "input": "public class ArrayHelper {",
    "adv": "public class ArrayHelper {",
    "gold_out": "}",
    "pred_out": "[ ] array ; }",
    "adv_out": "[ ] array ; }",
    "imp_words": {
      "ArrayHelper": 129.99864196777344,
      "class": 115.71490478515625,
      "public": 110.03772735595703
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 6,
    "query": 0,
    "changes": [],
    "input": "public static int[] Sort(int[] arr) {",
    "adv": "public static int[] Sort(int[] arr) {",
    "gold_out": "}",
    "pred_out": "r e t u rn",
    "adv_out": "r e t u rn",
    "imp_words": {
      "static": 145.5618133544922,
      "int[]": 142.37362670898438,
      "Sort(int[]": 139.48605346679688,
      "arr)": 136.19830322265625,
      "public": 110.83697509765625
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 6,
    "query": 0,
    "changes": [],
    "input": "if (arr == null) return null;",
    "adv": "if (arr == null) return null;",
    "gold_out": "public class FileHandler {",
    "pred_out": "if (arr == null) return",
    "adv_out": "if (arr == null) return",
    "imp_words": {
      "null)": 138.78582763671875,
      "==": 126.1634750366211,
      "return": 119.90895080566406,
      "if": 115.58282470703125,
      "(arr": 108.95790100097656
    }
  },
  {
    "success": 2,
    "pred_bleu": 12.6,
    "after_attack_bleu": 12.6,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "Array.Sort(arr);",
    "adv": "Array.Sort(arr);",
    "gold_out": "public static void writeToFile(String filename, String content) {",
    "pred_out": "unction( a r g s){retur",
    "adv_out": "unction( a r g s){retur",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 15.72,
    "after_attack_bleu": 15.72,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "return arr;",
    "adv": "return arr;",
    "gold_out": "try (FileWriter writer = new FileWriter(filename)) {",
    "pred_out": "functi o n (arr,k y){if(arr==null)return null;for(var",
    "adv_out": "functi o n (arr,k y){if(arr==null)return null;for(var",
    "imp_words": {
      "return": 374.8768615722656
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "writer.write(content);",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 30.21,
    "after_attack_bleu": 30.21,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "} catch (IOException e) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 6,
    "query": 0,
    "changes": [],
    "input": "public static int FindMax(int[] arr) {",
    "adv": "public static int FindMax(int[] arr) {",
    "gold_out": "e.printStackTrace();",
    "pred_out": "public static int FindMax (",
    "adv_out": "public static int FindMax (",
    "imp_words": {
      "FindMax(int[]": 152.8195343017578,
      "arr)": 136.82736206054688,
      "int": 129.4615020751953,
      "public": 124.07331848144531,
      "static": 122.82559967041016
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 10,
    "query": 0,
    "changes": [],
    "input": "if (arr == null || arr.Length == 0) return -1;",
    "adv": "if (arr == null || arr.Length == 0) return -1;",
    "gold_out": "}",
    "pred_out": "if (arr == null) return",
    "adv_out": "if (arr == null) return",
    "imp_words": {
      "return": 157.88531494140625,
      "0)": 150.7478485107422,
      "arr.Length": 128.96722412109375,
      "if": 126.7657699584961,
      "(arr": 124.8311767578125,
      "null": 120.64710998535156,
      "||": 117.15554809570312,
      "==": 111.09529113769531
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "return arr.Max();",
    "adv": "return arr.Max();",
    "gold_out": "}",
    "pred_out": "r eturn arr.Max(functi o n(arr",
    "adv_out": "r eturn arr.Max(functi o n(arr",
    "imp_words": {
      "return": 197.17315673828125
    }
  },
  {
    "success": 3,
    "pred_bleu": 0.0,
    "after_attack_bleu": 0.0,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 24.74,
    "after_attack_bleu": 24.74,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "public static String readFromFile(String filename) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 12.6,
    "after_attack_bleu": 12.6,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "using System;",
    "adv": "using System;",
    "gold_out": "try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {",
    "pred_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "adv_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "imp_words": {
      "using": 324.45654296875
    }
  },
  {
    "success": 2,
    "pred_bleu": 30.21,
    "after_attack_bleu": 30.21,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "using System.IO;",
    "adv": "using System.IO;",
    "gold_out": "return reader.lines().collect(Collectors.joining(\"\\n\"));",
    "pred_out": "using System.Collections.Generic; using System.Collections.Generic.InteropServices;",
    "adv_out": "using System.Collections.Generic; using System.Collections.Generic.InteropServices;",
    "imp_words": {
      "using": 324.10546875
    }
  },
  {
    "success": 2,
    "pred_bleu": 30.21,
    "after_attack_bleu": 30.21,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "} catch (IOException e) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 84.09,
    "after_attack_bleu": 84.09,
    "change": 0,
    "num_word": 4,
    "query": 0,
    "changes": [],
    "input": "public class FileHandler {",
    "adv": "public class FileHandler {",
    "gold_out": "e.printStackTrace();",
    "pred_out": "}",
    "adv_out": "}",
    "imp_words": {
      "class": 91.3082275390625,
      "FileHandler": 83.22494506835938,
      "public": 46.02117156982422
    }
  },
  {
    "success": 2,
    "pred_bleu": 30.93,
    "after_attack_bleu": 30.93,
    "change": 0,
    "num_word": 8,
    "query": 0,
    "changes": [],
    "input": "public static void WriteToFile(string filename, string content) {",
    "adv": "public static void WriteToFile(string filename, string content) {",
    "gold_out": "return null;",
    "pred_out": "{",
    "adv_out": "{",
    "imp_words": {
      "content)": 78.94058990478516,
      "filename,": 78.14315795898438,
      "void": 62.20796585083008,
      "string": 61.70936584472656,
      "static": 56.772254943847656,
      "WriteToFile(string": 54.33595275878906,
      "public": 40.94281768798828
    }
  },
  {
    "success": 2,
    "pred_bleu": 27.3,
    "after_attack_bleu": 27.3,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "try {",
    "adv": "try {",
    "gold_out": "}",
    "pred_out": "s w itch(e) { }",
    "adv_out": "s w itch(e) { }",
    "imp_words": {
      "try": 113.10537719726562
    }
  },
  {
    "success": 2,
    "pred_bleu": 30.21,
    "after_attack_bleu": 30.21,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "File.WriteAllText(filename, content);",
    "adv": "File.WriteAllText(filename, content);",
    "gold_out": "}",
    "pred_out": "File . WriteAllText(filename, content); ",
    "adv_out": "File . WriteAllText(filename, content); ",
    "imp_words": {
      "File.WriteAllText(filename,": 179.19493103027344
    }
  },
  {
    "success": 2,
    "pred_bleu": 18.58,
    "after_attack_bleu": 18.58,
    "change": 0,
    "num_word": 5,
    "query": 0,
    "changes": [],
    "input": "} catch (IOException e) {",
    "adv": "} catch (IOException e) {",
    "gold_out": "}",
    "pred_out": "e . s ource=e}catch(FileNotFoundException e){}}catch(IOException e){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione",
    "adv_out": "e . s ource=e}catch(FileNotFoundException e){}}catch(IOException e){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione",
    "imp_words": {
      "(IOException": 1292.669921875,
      "catch": 1284.4844970703125,
      "}": 1270.9443359375,
      "e)": 1266.9061279296875
    }
  },
  {
    "success": 2,
    "pred_bleu": 27.3,
    "after_attack_bleu": 27.3,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "Console.WriteLine(e.Message);",
    "adv": "Console.WriteLine(e.Message);",
    "gold_out": "public class MathUtils {",
    "pred_out": "nction(e ) { e.Message=e.Message.Replace(e.Message,e.Message);}function Log(e){",
    "adv_out": "nction(e ) { e.Message=e.Message.Replace(e.Message,e.Message);}function Log(e){",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 16.58,
    "after_attack_bleu": 16.58,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "public static double power(double base, double exponent) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "return Math.pow(base, exponent);",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 27.3,
    "after_attack_bleu": 27.3,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "}",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 3,
    "pred_bleu": 0.0,
    "after_attack_bleu": 0.0,
    "change": 0,
    "num_word": 6,
    "query": 0,
    "changes": [],
    "input": "public static string ReadFromFile(string filename) {",
    "adv": "public static string ReadFromFile(string filename) {",
    "gold_out": "",
    "pred_out": "public static string ReadFromFile(string filename)",
    "adv_out": "public static string ReadFromFile(string filename)",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 22.35,
    "after_attack_bleu": 22.35,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "try {",
    "adv": "try {",
    "gold_out": "public static int factorial(int n) {",
    "pred_out": "s w itch(e) { }",
    "adv_out": "s w itch(e) { }",
    "imp_words": {
      "try": 113.10537719726562
    }
  },
  {
    "success": 2,
    "pred_bleu": 18.8,
    "after_attack_bleu": 18.8,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "return File.ReadAllText(filename);",
    "adv": "return File.ReadAllText(filename);",
    "gold_out": "if (n <= 1) return 1;",
    "pred_out": "functio n ( filename )",
    "adv_out": "functio n ( filename )",
    "imp_words": {
      "return": 71.19141387939453
    }
  },
  {
    "success": 2,
    "pred_bleu": 18.58,
    "after_attack_bleu": 18.58,
    "change": 0,
    "num_word": 5,
    "query": 0,
    "changes": [],
    "input": "} catch (IOException e) {",
    "adv": "} catch (IOException e) {",
    "gold_out": "return n * factorial(n - 1);",
    "pred_out": "e . s ource=e}catch(FileNotFoundException e){}}catch(IOException e){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione",
    "adv_out": "e . s ource=e}catch(FileNotFoundException e){}}catch(IOException e){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione){e.printStackTrace();}catch(Exceptione",
    "imp_words": {
      "(IOException": 1292.669921875,
      "catch": 1284.4844970703125,
      "}": 1270.9443359375,
      "e)": 1266.9061279296875
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "Console.WriteLine(e.Message);",
    "adv": "Console.WriteLine(e.Message);",
    "gold_out": "}",
    "pred_out": "nction(e ) { e.Message=e.Message.Replace(e.Message,e.Message);}function Log(e){",
    "adv_out": "nction(e ) { e.Message=e.Message.Replace(e.Message,e.Message);}function Log(e){",
    "imp_words": {}
  },
  {
    "success": 3,
    "pred_bleu": 0.0,
    "after_attack_bleu": 0.0,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "return null;",
    "adv": "return null;",
    "gold_out": "",
    "pred_out": "c o n s tructor:",
    "adv_out": "c o n s tructor:",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 24.74,
    "after_attack_bleu": 24.74,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "public static boolean isPrime(int n) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 18.8,
    "after_attack_bleu": 18.8,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "if (n < 2) return false;",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 10.04,
    "after_attack_bleu": 10.04,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "}",
    "adv": "}",
    "gold_out": "for (int i = 2; i <= Math.sqrt(n); i++) {",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 12.6,
    "after_attack_bleu": 12.6,
    "change": 0,
    "num_word": 2,
    "query": 0,
    "changes": [],
    "input": "using System;",
    "adv": "using System;",
    "gold_out": "if (n % i == 0) return false;",
    "pred_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "adv_out": "System.Collections.Generic; using System.Linq; using System.IO;",
    "imp_words": {
      "using": 324.45654296875
    }
  },
  {
    "success": 2,
    "pred_bleu": 27.3,
    "after_attack_bleu": 27.3,
    "change": 0,
    "num_word": 1,
    "query": 0,
    "changes": [],
    "input": "",
    "adv": "",
    "gold_out": "}",
    "pred_out": "public class C { }",
    "adv_out": "public class C { }",
    "imp_words": {}
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 4,
    "query": 0,
    "changes": [],
    "input": "public class MathUtils {",
    "adv": "public class MathUtils {",
    "gold_out": "return true;",
    "pred_out": "public static int Math =",
    "adv_out": "public static int Math =",
    "imp_words": {
      "MathUtils": 129.09390258789062,
      "class": 103.52892303466797,
      "public": 94.99810791015625
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 8,
    "query": 0,
    "changes": [],
    "input": "public static double Power(double base, double exponent) {",
    "adv": "public static double Power(double base, double exponent) {",
    "gold_out": "}",
    "pred_out": "public static double ToPower(double base,",
    "adv_out": "public static double ToPower(double base,",
    "imp_words": {
      "base,": 157.34640502929688,
      "Power(double": 156.12318420410156,
      "double": 129.26959228515625,
      "exponent)": 145.92799377441406,
      "public": 137.9923095703125,
      "static": 100.03219604492188
    }
  },
  {
    "success": 2,
    "pred_bleu": 22.96,
    "after_attack_bleu": 22.96,
    "change": 0,
    "num_word": 3,
    "query": 0,
    "changes": [],
    "input": "return Math.Pow(base, exponent);",
    "adv": "return Math.Pow(base, exponent);",
    "gold_out": "}",
    "pred_out": "functio n ( base ,",
    "adv_out": "functio n ( base ,",
    "imp_words": {
      "Math.Pow(base,": 137.3411865234375,
      "return": 109.50841522216797
    }
  }
]