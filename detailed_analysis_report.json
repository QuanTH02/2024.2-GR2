{
  "total_samples": 67,
  "critical_errors": [],
  "logic_issues": [
    {
      "sample_index": 0,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 18.58,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 18.58,
        "change": 1,
        "query": 33,
        "input": "using System;",
        "adv": "existing System;",
        "gold_out": "public class Calculator {"
      }
    },
    {
      "sample_index": 2,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 32.37,
            "after_bleu": 27.3,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 32.37,
        "after_bleu": 27.3,
        "change": 1,
        "query": 20,
        "input": "public class Calculator {",
        "adv": "public class protected {",
        "gold_out": "return a + b;"
      }
    },
    {
      "sample_index": 3,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 84.09,
            "after_bleu": 22.96,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 84.09,
        "after_bleu": 22.96,
        "change": 1,
        "query": 3,
        "input": "public int Add(int a, int b) {",
        "adv": "public int Add(int a, Ġint b) {",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 7,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 84.09,
            "after_bleu": 35.93,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 84.09,
        "after_bleu": 35.93,
        "change": 1,
        "query": 1,
        "input": "public int Subtract(int a, int b) {",
        "adv": "public int Subtract(int a, int b)) {",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 8,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 1.54,
            "change": 2,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 1.54,
        "change": 2,
        "query": 70,
        "input": "return a - b;",
        "adv": "Ġ- a ' b;",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 11,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 18.8,
            "after_bleu": 18.58,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 18.8,
        "after_bleu": 18.58,
        "change": 1,
        "query": 33,
        "input": "using System;",
        "adv": "existing System;",
        "gold_out": "if (str == null) return null;"
      }
    },
    {
      "sample_index": 12,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 18.58,
            "after_bleu": 18.33,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 18.58,
        "after_bleu": 18.33,
        "change": 1,
        "query": 4,
        "input": "using System.Text;",
        "adv": "File System.Text;",
        "gold_out": "return new StringBuilder(str).reverse().toString();"
      }
    },
    {
      "sample_index": 15,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 2, got 3",
          "details": {
            "pred_bleu": 0.57,
            "after_bleu": 0.57,
            "change": 0,
            "gold_empty": false,
            "bleu_decreased": false
          }
        }
      ],
      "sample_data": {
        "success": 3,
        "pred_bleu": 0.57,
        "after_bleu": 0.57,
        "change": 0,
        "query": 0,
        "input": "public static string Reverse(string str) {",
        "adv": "public static string Reverse(string str) {",
        "gold_out": "public static boolean isEmpty(String str) {"
      }
    },
    {
      "sample_index": 16,
      "issues": [
        {
          "type": "input_adv_consistency",
          "description": "Adv should be different from input when changes exist",
          "details": {
            "input": "if (str == null) return null;",
            "adv": "if (str == null) return null;",
            "changes": [
              [
                6,
                ":",
                "return"
              ],
              [
                1,
                "(arr",
                "(str"
              ],
              [
                4,
                "string))",
                "null)"
              ]
            ]
          }
        }
      ],
      "sample_data": {
        "success": 1,
        "pred_bleu": 19.72,
        "after_bleu": 0,
        "change": 3,
        "query": 79,
        "input": "if (str == null) return null;",
        "adv": "if (str == null) return null;",
        "gold_out": "return str == null || str.length() == 0;"
      }
    },
    {
      "sample_index": 17,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 4, got 2",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 22.96,
            "change": 2,
            "gold_empty": false,
            "bleu_decreased": false
          }
        }
      ],
      "sample_data": {
        "success": 2,
        "pred_bleu": 22.96,
        "after_bleu": 22.96,
        "change": 2,
        "query": 79,
        "input": "char[] charArray = str.ToCharArray();",
        "adv": "char [] character Array ( str.ToCharArray();",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 19,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 18.58,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 18.58,
        "change": 1,
        "query": 5,
        "input": "return new string(charArray);",
        "adv": "return . string(charArray);",
        "gold_out": "public class ArrayHelper {"
      }
    },
    {
      "sample_index": 22,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 1.54,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 1.54,
        "change": 1,
        "query": 5,
        "input": "public static bool IsEmpty(string str) {",
        "adv": "public static bool IsEmpty(string str ) {",
        "gold_out": "Arrays.sort(arr);"
      }
    },
    {
      "sample_index": 23,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 27.3,
            "after_bleu": 22.96,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 27.3,
        "after_bleu": 22.96,
        "change": 1,
        "query": 2,
        "input": "return string.IsNullOrEmpty(str);",
        "adv": ". string.IsNullOrEmpty(str);",
        "gold_out": "return arr;"
      }
    },
    {
      "sample_index": 26,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 18.8,
            "after_bleu": 18.58,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 18.8,
        "after_bleu": 18.58,
        "change": 1,
        "query": 33,
        "input": "using System;",
        "adv": "existing System;",
        "gold_out": "public static int findMax(int[] arr) {"
      }
    },
    {
      "sample_index": 27,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 6.74,
            "after_bleu": 4.19,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 6.74,
        "after_bleu": 4.19,
        "change": 1,
        "query": 45,
        "input": "using System.Linq;",
        "adv": "ĠFile System.Linq;",
        "gold_out": "if (arr == null || arr.length == 0) return -1;"
      }
    },
    {
      "sample_index": 29,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 27.3,
            "after_bleu": 1.83,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 27.3,
        "after_bleu": 1.83,
        "change": 1,
        "query": 1,
        "input": "public class ArrayHelper {",
        "adv": "public class ObjectSupport {",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 30,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 1.54,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 1.54,
        "change": 1,
        "query": 7,
        "input": "public static int[] Sort(int[] arr) {",
        "adv": "public ĉ int[] Sort(int[] arr) {",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 31,
      "issues": [
        {
          "type": "input_adv_consistency",
          "description": "Adv should be different from input when changes exist",
          "details": {
            "input": "if (arr == null) return null;",
            "adv": "if (arr == null) return null;",
            "changes": [
              [
                4,
                "string )",
                "null)"
              ],
              [
                3,
                "ads",
                "=="
              ],
              [
                6,
                "back",
                "return"
              ]
            ]
          }
        }
      ],
      "sample_data": {
        "success": 1,
        "pred_bleu": 22.96,
        "after_bleu": 0,
        "change": 3,
        "query": 113,
        "input": "if (arr == null) return null;",
        "adv": "if (arr == null) return null;",
        "gold_out": "public class FileHandler {"
      }
    },
    {
      "sample_index": 33,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 4, got 2",
          "details": {
            "pred_bleu": 15.72,
            "after_bleu": 15.72,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": false
          }
        }
      ],
      "sample_data": {
        "success": 2,
        "pred_bleu": 15.72,
        "after_bleu": 15.72,
        "change": 1,
        "query": 49,
        "input": "return arr;",
        "adv": "show arr;",
        "gold_out": "try (FileWriter writer = new FileWriter(filename)) {"
      }
    },
    {
      "sample_index": 36,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 22.31,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 22.31,
        "change": 1,
        "query": 1,
        "input": "public static int FindMax(int[] arr) {",
        "adv": "public static int FindMax(IntArray arr) {",
        "gold_out": "e.printStackTrace();"
      }
    },
    {
      "sample_index": 37,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 1.54,
            "change": 2,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 1.54,
        "change": 2,
        "query": 53,
        "input": "if (arr == null || arr.Length == 0) return -1;",
        "adv": "if (arr == null || arr.Length ==  0 ) x -1;",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 38,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 18.58,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 18.58,
        "change": 1,
        "query": 23,
        "input": "return arr.Max();",
        "adv": "catch arr.Max();",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 41,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 4, got 2",
          "details": {
            "pred_bleu": 12.6,
            "after_bleu": 12.6,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": false
          }
        }
      ],
      "sample_data": {
        "success": 2,
        "pred_bleu": 12.6,
        "after_bleu": 12.6,
        "change": 1,
        "query": 49,
        "input": "using System;",
        "adv": "this System;",
        "gold_out": "try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {"
      }
    },
    {
      "sample_index": 42,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 30.21,
            "after_bleu": 22.96,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 30.21,
        "after_bleu": 22.96,
        "change": 1,
        "query": 1,
        "input": "using System.IO;",
        "adv": "use System.IO;",
        "gold_out": "return reader.lines().collect(Collectors.joining(\"\\n\"));"
      }
    },
    {
      "sample_index": 44,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 84.09,
            "after_bleu": 27.3,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 84.09,
        "after_bleu": 27.3,
        "change": 1,
        "query": 2,
        "input": "public class FileHandler {",
        "adv": "public struct FileHandler {",
        "gold_out": "e.printStackTrace();"
      }
    },
    {
      "sample_index": 45,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 30.93,
            "after_bleu": 22.96,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 30.93,
        "after_bleu": 22.96,
        "change": 1,
        "query": 1,
        "input": "public static void WriteToFile(string filename, string content) {",
        "adv": "public static void WriteToFile(string filename, string string] {",
        "gold_out": "return null;"
      }
    },
    {
      "sample_index": 46,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 27.3,
            "after_bleu": 22.96,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 27.3,
        "after_bleu": 22.96,
        "change": 1,
        "query": 1,
        "input": "try {",
        "adv": "catch {",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 47,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 30.21,
            "after_bleu": 22.96,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 30.21,
        "after_bleu": 22.96,
        "change": 1,
        "query": 1,
        "input": "File.WriteAllText(filename, content);",
        "adv": "File.WriteAllText(Filename\\\", content);",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 48,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 18.58,
            "after_bleu": 18.33,
            "change": 2,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 18.58,
        "after_bleu": 18.33,
        "change": 2,
        "query": 19,
        "input": "} catch (IOException e) {",
        "adv": "} except ([E e) {",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 54,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 4, got 2",
          "details": {
            "pred_bleu": 22.35,
            "after_bleu": 22.35,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": false
          }
        }
      ],
      "sample_data": {
        "success": 2,
        "pred_bleu": 22.35,
        "after_bleu": 22.35,
        "change": 1,
        "query": 49,
        "input": "try {",
        "adv": "} {",
        "gold_out": "public static int factorial(int n) {"
      }
    },
    {
      "sample_index": 55,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 18.8,
            "after_bleu": 18.58,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 18.8,
        "after_bleu": 18.58,
        "change": 1,
        "query": 18,
        "input": "return File.ReadAllText(filename);",
        "adv": "! File.ReadAllText(filename);",
        "gold_out": "if (n <= 1) return 1;"
      }
    },
    {
      "sample_index": 56,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 18.58,
            "after_bleu": 18.33,
            "change": 2,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 18.58,
        "after_bleu": 18.33,
        "change": 2,
        "query": 19,
        "input": "} catch (IOException e) {",
        "adv": "} except ([E e) {",
        "gold_out": "return n * factorial(n - 1);"
      }
    },
    {
      "sample_index": 62,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 4, got 2",
          "details": {
            "pred_bleu": 12.6,
            "after_bleu": 12.6,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": false
          }
        }
      ],
      "sample_data": {
        "success": 2,
        "pred_bleu": 12.6,
        "after_bleu": 12.6,
        "change": 1,
        "query": 49,
        "input": "using System;",
        "adv": "this System;",
        "gold_out": "if (n % i == 0) return false;"
      }
    },
    {
      "sample_index": 64,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 14.26,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 14.26,
        "change": 1,
        "query": 2,
        "input": "public class MathUtils {",
        "adv": "public class math[ {",
        "gold_out": "return true;"
      }
    },
    {
      "sample_index": 65,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 22.31,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 22.31,
        "change": 1,
        "query": 4,
        "input": "public static double Power(double base, double exponent) {",
        "adv": "public static double Power(double Base , double exponent) {",
        "gold_out": "}"
      }
    },
    {
      "sample_index": 66,
      "issues": [
        {
          "type": "success_logic_error",
          "description": "Success logic error: expected 1, got 4",
          "details": {
            "pred_bleu": 22.96,
            "after_bleu": 22.09,
            "change": 1,
            "gold_empty": false,
            "bleu_decreased": true
          }
        }
      ],
      "sample_data": {
        "success": 4,
        "pred_bleu": 22.96,
        "after_bleu": 22.09,
        "change": 1,
        "query": 3,
        "input": "return Math.Pow(base, exponent);",
        "adv": "return Math.power(Base), exponent);",
        "gold_out": "}"
      }
    }
  ],
  "data_quality_issues": [],
  "recommendations": [
    {
      "issue": "Logic lỗi trong field success",
      "count": 34,
      "solution": "Cần sửa lại logic xác định success trong code attack"
    },
    {
      "issue": "Input và adv giống nhau khi có changes",
      "count": 2,
      "solution": "Cần kiểm tra logic tạo adversarial example"
    }
  ],
  "error_summary": {
    "success_logic_error": [
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 2, got 3",
      "Success logic error: expected 4, got 2",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 4, got 2",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 4, got 2",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 4, got 2",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 4, got 2",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4",
      "Success logic error: expected 1, got 4"
    ],
    "input_adv_consistency": [
      "Adv should be different from input when changes exist",
      "Adv should be different from input when changes exist"
    ]
  }
}