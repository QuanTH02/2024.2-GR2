public class Calculator {
    public int add(int a, int b) {
        return a - b;  // Bug: should be a + b
    }
}
public class StringUtils {
    public static String reverse(String str) {
        if (str == null) return null;
        return str;  // Bug: should reverse the string
    }
}
public class ArrayHelper {
    public static int findMax(int[] arr) {
        if (arr == null || arr.length == 0) return -1;
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] < max) {  // Bug: should be arr[i] > max
                max = arr[i];
            }
        }
        return max;
    }
}
public class FileHandler {
    public static void writeToFile(String filename, String content) {
        try (FileWriter writer = new FileWriter(filename)) {
            writer.write(content);
            writer.flush();  // Bug: missing close() or use try-with-resources
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
public class MathUtils {
    public static boolean isPrime(int n) {
        if (n < 2) return false;
        for (int i = 2; i < n; i++) {  // Bug: should be i <= Math.sqrt(n)
            if (n % i == 0) return false;
        }
        return true;
    }
}
